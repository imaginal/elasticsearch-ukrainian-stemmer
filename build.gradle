apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'

group = 'com.componentix'
version = '1.0'
sourceCompatibility = "1.7"
targetCompatibility = "1.7"

description = """Ukrainian stemmer plugin for ElasticSearch"""

repositories {
    mavenLocal()
    maven { url "https://oss.sonatype.org/content/repositories/releases" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile group: 'org.elasticsearch', name: 'elasticsearch', version:'1.7.4'
    compile group: 'com.componentix', name: 'ukrainian-stemmer', version:'1.0'
}


//distsDir+'/exploded' = new File(distsDir, 'exploded')

//manifest.mainAttributes("Implementation-Title": "ElasticSearch::Plugins::Analysis::UkrainianStemmer", "Implementation-Version": rootProject.version, "Implementation-Date": new Date().format("yyyy-MM-dd HH:mm:ss"))

jar {
    manifest {
        attributes 'Implementation-Title': 'ElasticSearch::Plugins::Analysis::UkrainianStemmer',
                   'Implementation-Version': rootProject.version,
                   "Implementation-Date": new Date().format("yyyy-MM-dd HH:mm:ss")
    }
}

task explodedDist(dependsOn: [jar], description: 'Builds the plugin zip file') << {
    [new File(distsDir, 'exploded')]*.mkdirs()

    copy {
        from configurations.compile
        into new File(distsDir, 'exploded')
    }

    ant.delete { fileset(dir: new File(distsDir, 'exploded'), includes: "elasticsearch-*.jar") }

    copy {
        from libsDir
        into new File(distsDir, 'exploded')
    }

    ant.delete { fileset(dir: new File(distsDir, 'exploded'), includes: "groovy-*.jar") }
    ant.delete { fileset(dir: new File(distsDir, 'exploded'), includes: "snakeyaml-*.jar") }

    ant.delete { fileset(dir: new File(distsDir, 'exploded'), includes: "lucene-*.jar") }
    ant.delete { fileset(dir: new File(distsDir, 'exploded'), includes: "spatial4j-*.jar") }
}

task zip(type: Zip, dependsOn: ['explodedDist']) {
    from(new File(distsDir, 'exploded')) {
    }
}

task release(dependsOn: [zip]) << {
    ant.delete(dir: new File(distsDir, 'exploded'))
    copy {
        from distsDir
        into(new File(rootProject.distsDir, "plugins"))
    }
}

